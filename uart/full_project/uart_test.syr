Release 8.2i - xst I.31
Copyright (c) 1995-2006 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to ./xst/projnav.tmp
CPU : 0.00 / 0.53 s | Elapsed : 0.00 / 1.00 s
 
--> Parameter xsthdpdir set to ./xst
CPU : 0.00 / 0.53 s | Elapsed : 0.00 / 1.00 s
 
--> Reading design: uart_test.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Compilation
  3) Design Hierarchy Analysis
  4) HDL Analysis
  5) HDL Synthesis
     5.1) HDL Synthesis Report
  6) Advanced HDL Synthesis
     6.1) Advanced HDL Synthesis Report
  7) Low Level Synthesis
  8) Partition Report
  9) Final Report
     9.1) Device utilization summary
     9.2) TIMING REPORT


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "uart_test.prj"
Input Format                       : mixed
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "uart_test"
Output Format                      : NGC
Target Device                      : xc3s500e-4-fg320

---- Source Options
Top Module Name                    : uart_test
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
FSM Style                          : lut
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Mux Style                          : Auto
Decoder Extraction                 : YES
Priority Encoder Extraction        : YES
Shift Register Extraction          : YES
Logical Shifter Extraction         : YES
XOR Collapsing                     : YES
ROM Style                          : Auto
Mux Extraction                     : YES
Resource Sharing                   : YES
Multiplier Style                   : auto
Automatic Register Balancing       : No

---- Target Options
Add IO Buffers                     : YES
Global Maximum Fanout              : 500
Add Generic Clock Buffer(BUFG)     : 8
Register Duplication               : YES
Slice Packing                      : YES
Pack IO Registers into IOBs        : auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Keep Hierarchy                     : NO
RTL Output                         : Yes
Global Optimization                : AllClockNets
Write Timing Constraints           : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : maintain
Slice Utilization Ratio            : 100
Slice Utilization Ratio Delta      : 5

---- Other Options
lso                                : uart_test.lso
Read Cores                         : YES
cross_clock_analysis               : NO
verilog2001                        : YES
safe_implementation                : No
Optimize Instantiated Primitives   : NO
use_clock_enable                   : Yes
use_sync_set                       : Yes
use_sync_reset                     : Yes

=========================================================================


=========================================================================
*                          HDL Compilation                              *
=========================================================================
Compiling verilog file "uart_tx.v" in library work
Compiling verilog file "uart_rx.v" in library work
Module <uart_tx> compiled
Compiling verilog file "mod_m_counter.v" in library work
Module <uart_rx> compiled
Compiling verilog file "fifo.v" in library work
Module <mod_m_counter> compiled
Compiling verilog file "uart.v" in library work
Module <fifo> compiled
Compiling verilog file "debounce.v" in library work
Module <uart> compiled
Compiling verilog file "uart_test.v" in library work
Module <debounce> compiled
Module <uart_test> compiled
No errors in compilation
Analysis of file <"uart_test.prj"> succeeded.
 

=========================================================================
*                     Design Hierarchy Analysis                         *
=========================================================================
Analyzing hierarchy for module <uart_test> in library <work>.

Analyzing hierarchy for module <uart> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	DVSR = "00000000000000000000000010100011"
	DVSR_BIT = "00000000000000000000000000001000"
	FIFO_W = "00000000000000000000000000000010"
	SB_TICK = "00000000000000000000000000010000"

Analyzing hierarchy for module <debounce> in library <work> with parameters.
	N = "00000000000000000000000000010101"
	one = "10"
	wait0 = "01"
	wait1 = "11"
	zero = "00"

Analyzing hierarchy for module <mod_m_counter> in library <work> with parameters.
	M = "00000000000000000000000010100011"
	N = "00000000000000000000000000001000"

Analyzing hierarchy for module <uart_rx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"

Analyzing hierarchy for module <fifo> in library <work> with parameters.
	W = "00000000000000000000000000000010"
	B = "00000000000000000000000000001000"

Analyzing hierarchy for module <uart_tx> in library <work> with parameters.
	DBIT = "00000000000000000000000000001000"
	SB_TICK = "00000000000000000000000000010000"
	data = "10"
	idle = "00"
	start = "01"
	stop = "11"

Building hierarchy successfully finished.

=========================================================================
*                            HDL Analysis                               *
=========================================================================
Analyzing top module <uart_test>.
Module <uart_test> is correct for synthesis.
 
Analyzing module <uart> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	DVSR = 32'sb00000000000000000000000010100011
	DVSR_BIT = 32'sb00000000000000000000000000001000
	FIFO_W = 32'sb00000000000000000000000000000010
Module <uart> is correct for synthesis.
 
Analyzing module <mod_m_counter> in library <work>.
	N = 32'sb00000000000000000000000000001000
	M = 32'sb00000000000000000000000010100011
Module <mod_m_counter> is correct for synthesis.
 
Analyzing module <uart_rx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	idle = 2'b00
	start = 2'b01
	data = 2'b10
	stop = 2'b11
Module <uart_rx> is correct for synthesis.
 
Analyzing module <fifo> in library <work>.
	B = 32'sb00000000000000000000000000001000
	W = 32'sb00000000000000000000000000000010
Module <fifo> is correct for synthesis.
 
Analyzing module <uart_tx> in library <work>.
	DBIT = 32'sb00000000000000000000000000001000
	SB_TICK = 32'sb00000000000000000000000000010000
	idle = 2'b00
	start = 2'b01
	data = 2'b10
	stop = 2'b11
Module <uart_tx> is correct for synthesis.
 
Analyzing module <debounce> in library <work>.
	zero = 2'b00
	wait0 = 2'b01
	one = 2'b10
	wait1 = 2'b11
	N = 32'sb00000000000000000000000000010101
Module <debounce> is correct for synthesis.
 

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Performing bidirectional port resolution...

Synthesizing Unit <debounce>.
    Related source file is "debounce.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 43 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_0> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 10                                             |
    | Inputs             | 3                                              |
    | Outputs            | 5                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (positive)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 21-bit subtractor for signal <$old_q_next_7>.
    Found 21-bit register for signal <q_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  21 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <debounce> synthesized.


Synthesizing Unit <mod_m_counter>.
    Related source file is "mod_m_counter.v".
    Found 8-bit adder for signal <$addsub0000> created at line 26.
    Found 8-bit register for signal <r_reg>.
    Summary:
	inferred   8 D-type flip-flop(s).
	inferred   1 Adder/Subtractor(s).
Unit <mod_m_counter> synthesized.


Synthesizing Unit <uart_rx>.
    Related source file is "uart_rx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 53 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_1> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 5                                              |
    | Outputs            | 4                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (positive)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <$addsub0000> created at line 79.
    Found 4-bit adder for signal <$share0000> created at line 53.
    Found 8-bit register for signal <b_reg>.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit register for signal <s_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  15 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_rx> synthesized.


Synthesizing Unit <fifo>.
    Related source file is "fifo.v".
WARNING:Xst:646 - Signal <r_ptr_succ> is assigned but never used.
WARNING:Xst:646 - Signal <w_ptr_succ> is assigned but never used.
    Found 4x8-bit dual-port distributed RAM for signal <array_reg>.
    -----------------------------------------------------------------------
    | ram_style          | Auto                                |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 4-word x 8-bit                      |          |
    |     clkA           | connected to signal <clk>           | rise     |
    |     weA            | connected to signal <wr_en>         | high     |
    |     addrA          | connected to signal <w_ptr_reg>     |          |
    |     diA            | connected to signal <w_data>        |          |
    -----------------------------------------------------------------------
    | Port B                                                              |
    |     aspect ratio   | 4-word x 8-bit                      |          |
    |     addrB          | connected to signal <r_ptr_reg>     |          |
    |     doB            | connected to signal <r_data>        |          |
    -----------------------------------------------------------------------
    Found 4x1-bit ROM for signal <$mux0000>.
    Found 4x1-bit ROM for signal <$mux0003>.
    Found 2-bit comparator equal for signal <$cmp_eq0000> created at line 76.
    Found 2-bit comparator equal for signal <$cmp_eq0001> created at line 68.
    Found 2-bit adder for signal <$old_r_ptr_succ_5>.
    Found 2-bit adder for signal <$old_w_ptr_succ_6>.
    Found 1-bit 4-to-1 multiplexer for signal <empty_next>.
    Found 1-bit register for signal <empty_reg>.
    Found 1-bit 4-to-1 multiplexer for signal <full_next>.
    Found 1-bit register for signal <full_reg>.
    Found 2-bit register for signal <r_ptr_reg>.
    Found 2-bit register for signal <w_ptr_reg>.
    Summary:
	inferred   1 RAM(s).
	inferred   2 ROM(s).
	inferred   6 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
	inferred   2 Comparator(s).
	inferred   2 Multiplexer(s).
Unit <fifo> synthesized.


Synthesizing Unit <uart_tx>.
    Related source file is "uart_tx.v".
INFO:Xst:2117 - HDL ADVISOR - Mux Selector <state_reg> of Case statement line 58 was re-encoded using one-hot encoding. The case statement will be optimized (default statement optimization), but this optimization may lead to design initialization problems. To ensure the design works safely, you can:
   	- add an 'INIT' attribute on signal <state_reg> (optimization is then done without any risk)
   	- use the attribute 'signal_encoding user' to avoid onehot optimization
   	- use the attribute 'safe_implementation yes' to force XST to perform a safe (but less efficient) optimization
    Found finite state machine <FSM_2> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 4                                              |
    | Transitions        | 12                                             |
    | Inputs             | 4                                              |
    | Outputs            | 4                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | reset (positive)                               |
    | Reset type         | asynchronous                                   |
    | Reset State        | 00                                             |
    | Encoding           | automatic                                      |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 3-bit adder for signal <$addsub0000> created at line 93.
    Found 4-bit adder for signal <$share0000> created at line 58.
    Found 8-bit register for signal <b_reg>.
    Found 3-bit register for signal <n_reg>.
    Found 4-bit register for signal <s_reg>.
    Found 1-bit register for signal <tx_reg>.
    Summary:
	inferred   1 Finite State Machine(s).
	inferred  16 D-type flip-flop(s).
	inferred   2 Adder/Subtractor(s).
Unit <uart_tx> synthesized.


Synthesizing Unit <uart>.
    Related source file is "uart.v".
Unit <uart> synthesized.


Synthesizing Unit <uart_test>.
    Related source file is "uart_test.v".
WARNING:Xst:646 - Signal <tx_full> is assigned but never used.
WARNING:Xst:646 - Signal <rx_empty> is assigned but never used.
    Found 8-bit adder for signal <rec_data1>.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <uart_test> synthesized.

INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 2
 4x8-bit dual-port distributed RAM                     : 2
# ROMs                                                 : 4
 4x1-bit ROM                                           : 4
# Adders/Subtractors                                   : 11
 2-bit adder                                           : 4
 21-bit subtractor                                     : 1
 3-bit adder                                           : 2
 4-bit adder                                           : 2
 8-bit adder                                           : 2
# Registers                                            : 17
 1-bit register                                        : 5
 2-bit register                                        : 4
 21-bit register                                       : 1
 3-bit register                                        : 2
 4-bit register                                        : 2
 8-bit register                                        : 3
# Comparators                                          : 4
 2-bit comparator equal                                : 4
# Multiplexers                                         : 4
 1-bit 4-to-1 multiplexer                              : 4

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================

Analyzing FSM <FSM_2> for best encoding.
Optimizing FSM <uart_unit/uart_tx_unit/state_reg> on signal <state_reg[1:2]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 10
 11    | 11
-------------------
Analyzing FSM <FSM_1> for best encoding.
Optimizing FSM <uart_unit/uart_rx_unit/state_reg> on signal <state_reg[1:2]> with sequential encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 10
 11    | 11
-------------------
Analyzing FSM <FSM_0> for best encoding.
Optimizing FSM <btn_db_unit/state_reg> on signal <state_reg[1:2]> with gray encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 10
 10    | 11
 11    | 01
-------------------
Loading device for application Rf_Device from file '3s500e.nph' in environment C:\Xilinx.

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# FSMs                                                 : 3
# RAMs                                                 : 2
 4x8-bit dual-port distributed RAM                     : 2
# ROMs                                                 : 4
 4x1-bit ROM                                           : 4
# Adders/Subtractors                                   : 11
 2-bit adder                                           : 4
 21-bit subtractor                                     : 1
 3-bit adder                                           : 2
 4-bit adder                                           : 2
 8-bit adder                                           : 2
# Registers                                            : 72
 Flip-Flops                                            : 72
# Comparators                                          : 4
 2-bit comparator equal                                : 4
# Multiplexers                                         : 4
 1-bit 4-to-1 multiplexer                              : 4

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================

Optimizing unit <uart_test> ...

Optimizing unit <debounce> ...

Optimizing unit <mod_m_counter> ...

Optimizing unit <uart_rx> ...

Optimizing unit <fifo> ...

Optimizing unit <uart_tx> ...

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block uart_test, actual ratio is 2.
FlipFlop uart_unit/uart_rx_unit/state_reg_FFd1 has been replicated 1 time(s)
FlipFlop uart_unit/uart_rx_unit/state_reg_FFd2 has been replicated 1 time(s)

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 80
 Flip-Flops                                            : 80

=========================================================================

=========================================================================
*                          Partition Report                             *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Final Report                               *
=========================================================================
Final Results
RTL Top Level Output File Name     : uart_test.ngr
Top Level Output File Name         : uart_test
Output Format                      : NGC
Optimization Goal                  : Speed
Keep Hierarchy                     : NO

Design Statistics
# IOs                              : 13

Cell Usage :
# BELS                             : 273
#      GND                         : 1
#      INV                         : 21
#      LUT1                        : 1
#      LUT2                        : 11
#      LUT2_D                      : 2
#      LUT2_L                      : 1
#      LUT3                        : 44
#      LUT3_D                      : 1
#      LUT3_L                      : 7
#      LUT4                        : 106
#      LUT4_D                      : 8
#      LUT4_L                      : 17
#      MUXCY                       : 26
#      MUXF5                       : 5
#      VCC                         : 1
#      XORCY                       : 21
# FlipFlops/Latches                : 80
#      FDC                         : 77
#      FDP                         : 3
# RAMS                             : 16
#      RAM16X1D                    : 16
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 12
#      IBUF                        : 3
#      OBUF                        : 9
=========================================================================

Device utilization summary:
---------------------------

Selected Device : 3s500efg320-4 

 Number of Slices:                     116  out of   4656     2%  
 Number of Slice Flip Flops:            80  out of   9312     0%  
 Number of 4 input LUTs:               251  out of   9312     2%  
    Number used as logic:              219
    Number used as RAMs:                32
 Number of IOs:                         13
 Number of bonded IOBs:                 13  out of    232     5%  
 Number of GCLKs:                        1  out of     24     4%  


=========================================================================
TIMING REPORT

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 96    |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
-----------------------------------+------------------------+-------+
Control Signal                     | Buffer(FF name)        | Load  |
-----------------------------------+------------------------+-------+
reset                              | IBUF                   | 80    |
-----------------------------------+------------------------+-------+

Timing Summary:
---------------
Speed Grade: -4

   Minimum period: 10.763ns (Maximum Frequency: 92.911MHz)
   Minimum input arrival time before clock: 7.377ns
   Maximum output required time after clock: 6.714ns
   Maximum combinational path delay: No path found

Timing Detail:
--------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 10.763ns (frequency: 92.911MHz)
  Total number of paths / destination ports: 7638 / 175
-------------------------------------------------------------------------
Delay:               10.763ns (Levels of Logic = 23)
  Source:            btn_db_unit/q_reg_0 (FF)
  Destination:       uart_unit/fifo_tx_unit/inst_Mram_mem8 (RAM)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: btn_db_unit/q_reg_0 to uart_unit/fifo_tx_unit/inst_Mram_mem8
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q              2   0.591   1.052  btn_db_unit/q_reg_0 (btn_db_unit/q_reg_0)
     LUT1:I0->O            1   0.704   0.000  btn_db_unit/q_reg_0_rt (btn_db_unit/q_reg_0_rt)
     MUXCY:S->O            1   0.464   0.000  btn_db_unit/Msub__old_q_next_7_cy<0> (btn_db_unit/Msub__old_q_next_7_cy<0>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<1> (btn_db_unit/Msub__old_q_next_7_cy<1>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<2> (btn_db_unit/Msub__old_q_next_7_cy<2>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<3> (btn_db_unit/Msub__old_q_next_7_cy<3>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<4> (btn_db_unit/Msub__old_q_next_7_cy<4>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<5> (btn_db_unit/Msub__old_q_next_7_cy<5>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<6> (btn_db_unit/Msub__old_q_next_7_cy<6>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<7> (btn_db_unit/Msub__old_q_next_7_cy<7>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<8> (btn_db_unit/Msub__old_q_next_7_cy<8>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<9> (btn_db_unit/Msub__old_q_next_7_cy<9>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<10> (btn_db_unit/Msub__old_q_next_7_cy<10>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<11> (btn_db_unit/Msub__old_q_next_7_cy<11>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/Msub__old_q_next_7_cy<12> (btn_db_unit/Msub__old_q_next_7_cy<12>)
     XORCY:CI->O           3   0.804   1.082  btn_db_unit/Msub__old_q_next_7_xor<13> (btn_db_unit/_old_q_next_7<13>)
     LUT3:I0->O            1   0.704   0.000  btn_db_unit/state_reg_FFd1-In2_wg_lut<0> (N6)
     MUXCY:S->O            1   0.464   0.000  btn_db_unit/state_reg_FFd1-In2_wg_cy<0> (btn_db_unit/state_reg_FFd1-In2_wg_cy<0>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/state_reg_FFd1-In2_wg_cy<1> (btn_db_unit/state_reg_FFd1-In2_wg_cy<1>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/state_reg_FFd1-In2_wg_cy<2> (btn_db_unit/state_reg_FFd1-In2_wg_cy<2>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/state_reg_FFd1-In2_wg_cy<3> (btn_db_unit/state_reg_FFd1-In2_wg_cy<3>)
     MUXCY:CI->O           1   0.059   0.000  btn_db_unit/state_reg_FFd1-In2_wg_cy<4> (btn_db_unit/state_reg_FFd1-In2_wg_cy<4>)
     MUXCY:CI->O          16   0.459   1.316  btn_db_unit/state_reg_FFd1-In2_wg_cy<5> (btn_db_unit/state_reg_FFd1-In2_wg_cy<5>)
     LUT3:I1->O            8   0.704   1.083  uart_unit/fifo_tx_unit/wr_en1 (uart_unit/fifo_tx_unit/wr_en)
     RAM16X1D:WE               0.392          uart_unit/fifo_tx_unit/inst_Mram_mem71
    ----------------------------------------
    Total                     10.763ns (6.230ns logic, 4.533ns route)
                                       (57.9% logic, 42.1% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 74 / 50
-------------------------------------------------------------------------
Offset:              7.377ns (Levels of Logic = 4)
  Source:            btn (PAD)
  Destination:       uart_unit/fifo_tx_unit/inst_Mram_mem8 (RAM)
  Destination Clock: clk rising

  Data Path: btn to uart_unit/fifo_tx_unit/inst_Mram_mem8
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O             5   1.218   1.096  btn_IBUF (btn_IBUF)
     LUT4:I0->O            1   0.704   0.000  btn_db_unit/state_reg_FFd1-In2_wg_lut<5> (N11)
     MUXCY:S->O           16   0.864   1.316  btn_db_unit/state_reg_FFd1-In2_wg_cy<5> (btn_db_unit/state_reg_FFd1-In2_wg_cy<5>)
     LUT3:I1->O            8   0.704   1.083  uart_unit/fifo_tx_unit/wr_en1 (uart_unit/fifo_tx_unit/wr_en)
     RAM16X1D:WE               0.392          uart_unit/fifo_tx_unit/inst_Mram_mem71
    ----------------------------------------
    Total                      7.377ns (3.882ns logic, 3.495ns route)
                                       (52.6% logic, 47.4% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 25 / 9
-------------------------------------------------------------------------
Offset:              6.714ns (Levels of Logic = 2)
  Source:            uart_unit/fifo_rx_unit/r_ptr_reg_1 (FF)
  Destination:       led<0> (PAD)
  Source Clock:      clk rising

  Data Path: uart_unit/fifo_rx_unit/r_ptr_reg_1 to led<0>
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDC:C->Q             11   0.591   1.144  uart_unit/fifo_rx_unit/r_ptr_reg_1 (uart_unit/fifo_rx_unit/r_ptr_reg_1)
     RAM16X1D:DPRA1->DPO    6   0.704   1.003  uart_unit/fifo_rx_unit/inst_Mram_mem8 (led_0_OBUF)
     OBUF:I->O                 3.272          led_0_OBUF (led<0>)
    ----------------------------------------
    Total                      6.714ns (4.567ns logic, 2.147ns route)
                                       (68.0% logic, 32.0% route)

=========================================================================
CPU : 55.25 / 55.84 s | Elapsed : 55.00 / 56.00 s
 
--> 

Total memory usage is 136308 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :    5 (   0 filtered)
Number of infos    :    4 (   0 filtered)

